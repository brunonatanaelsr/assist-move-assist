name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install:
    name: 📦 Install
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: ♻️ Cache node modules
      id: node-modules-cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          apps/frontend/node_modules
          apps/backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'apps/frontend/package.json', 'apps/backend/package.json') }}

    - name: 📦 Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci --workspaces

  lint-frontend:
    name: 🔍 Lint Frontend
    runs-on: ubuntu-latest
    needs: install

    steps:
    - uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: ♻️ Cache node modules
      id: node-modules-cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          apps/frontend/node_modules
          apps/backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'apps/frontend/package.json', 'apps/backend/package.json') }}

    - name: 📦 Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci --workspaces

    - name: 🔍 Lint Frontend
      run: npm run lint --workspace apps/frontend

  lint-backend:
    name: 🔍 Lint Backend
    runs-on: ubuntu-latest
    needs: install

    steps:
    - uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: ♻️ Cache node modules
      id: node-modules-cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          apps/frontend/node_modules
          apps/backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'apps/frontend/package.json', 'apps/backend/package.json') }}

    - name: 📦 Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci --workspaces

    - name: 🔍 Lint Backend
      run: npm run lint --workspace apps/backend

  type-check:
    name: 🔄 Type Check
    runs-on: ubuntu-latest
    needs: install

    steps:
    - uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: ♻️ Cache node modules
      id: node-modules-cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          apps/frontend/node_modules
          apps/backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'apps/frontend/package.json', 'apps/backend/package.json') }}

    - name: 📦 Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci --workspaces

    - name: 🔄 Type Check
      run: |
        npm run type-check --workspace apps/frontend
        npm run type-check --workspace apps/backend

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    needs: install

    steps:
    - uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: ♻️ Cache node modules
      id: node-modules-cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          apps/frontend/node_modules
          apps/backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'apps/frontend/package.json', 'apps/backend/package.json') }}

    - name: 📦 Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci --workspaces

    - name: 🧪 Test
      run: npm test

  build:
    name: 🏗 Build
    needs:
      - lint-frontend
      - lint-backend
      - type-check
      - test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: 🏗 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: ♻️ Cache node modules
      id: node-modules-cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          apps/frontend/node_modules
          apps/backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'apps/frontend/package.json', 'apps/backend/package.json') }}

    - name: 📦 Install Dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci --workspaces

    - name: 🏗 Build Frontend
      run: npm run build --workspace apps/frontend

    - name: 🏗 Build Backend
      run: npm run build --workspace apps/backend

