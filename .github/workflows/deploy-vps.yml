name: Deploy to VPS

on:
  # Deploy only after CI/CD Pipeline completes successfully on main
  workflow_run:
    workflows: [CI/CD Pipeline]
    types: [completed]
  # Manual trigger remains available
  workflow_dispatch:
    inputs:
      run_migrations:
        description: "Run DB migrations"
        required: false
        default: "true"

jobs:
  deploy:
    # Run on manual trigger, or any CI run on main (regardless of conclusion)
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main')
    runs-on: ubuntu-latest
    env:
      # Fallbacks to run without GitHub Secrets (edit as needed)
      VPS_HOST: your.vps.host
      VPS_USER: root
      VPS_PASSWORD: your-vps-password
      VPS_PORT: '22'
      DOMAIN: example.com
      LETSENCRYPT_EMAIL: ''
      DB_NAME: movemarias
      DB_USER: assist_user
      DB_PASS: change-me-please
      SUPERADMIN_EMAIL: bruno@move.com
      SUPERADMIN_PASSWORD: 15002031
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: ChangeMe!123
      API_PORT: '3000'
    steps:
      - name: Checkout repository (to read optional .github/deploy.env)
        uses: actions/checkout@v4

      - name: Load .github/deploy.env overrides (if present)
        shell: bash
        run: |
          if [ -f .github/deploy.env ]; then
            echo "Loading .github/deploy.env overrides"
            while IFS='=' read -r k v; do
              [ -z "$k" ] && continue
              case "$k" in \#*) continue;; esac
              echo "$k=$v" >> $GITHUB_ENV
            done < .github/deploy.env
          fi
      - name: Deploy via SSH (bootstrap script)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          password: ${{ env.VPS_PASSWORD }}
          port: ${{ env.VPS_PORT }}
          script_stop: true
          command_timeout: 30m
          script: |
            set -euo pipefail
            export REPO_URL="https://github.com/${{ github.repository }}.git"
            export BRANCH="main"
            # Required
            export DOMAIN="${DOMAIN}"
            # Optional / Recommended
            export LETSENCRYPT_EMAIL="${LETSENCRYPT_EMAIL}"
            export DB_NAME="${DB_NAME}"
            export DB_USER="${DB_USER}"
            export DB_PASS="${DB_PASS}"
            export SUPERADMIN_EMAIL="${SUPERADMIN_EMAIL}"
            export SUPERADMIN_PASSWORD="${SUPERADMIN_PASSWORD}"
            export ADMIN_EMAIL="${ADMIN_EMAIL}"
            export ADMIN_PASSWORD="${ADMIN_PASSWORD}"
            export API_PORT="${API_PORT:-3000}"
            # Execute remote deploy script from repo
            bash -lc 'curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/deploy-ubuntu-24.sh -o /tmp/deploy.sh && bash /tmp/deploy.sh'

      - name: Post-deploy health check (SSH)
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          password: ${{ env.VPS_PASSWORD }}
          port: ${{ env.VPS_PORT }}
          script_stop: false
          command_timeout: 15m
          script: |
            set +e
            echo "== Systemd service status =="
            systemctl status assist-move-assist --no-pager || true
            echo "== Last 200 lines of service logs =="
            journalctl -u assist-move-assist --no-pager -n 200 || true
            echo "== Nginx config test =="
            nginx -t || true
            echo "== Nginx error log (last 100) =="
            tail -n 100 /var/log/nginx/error.log || true
            echo "== Health checks =="
            curl -fsS -H 'Host: ${DOMAIN}' http://127.0.0.1:${API_PORT}/health || true
            curl -fsSk https://${DOMAIN}/api/health || true
