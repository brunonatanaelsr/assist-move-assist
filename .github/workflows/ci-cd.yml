name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: movemarias_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci
          
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run Backend Tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test
          PORT: 3000
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: movemarias_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          JWT_SECRET: test_secret
          CORS_ORIGIN: http://localhost:5173
          
      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test
          
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
          
      - name: Run E2E Tests
        run: |
          cd frontend
          npm run test:e2e

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install PM2
        run: npm install -g pm2
        
      - name: Deploy
        run: |
          echo "ðŸš€ Iniciando deploy..."
          
          # Backend
          cd backend
          npm ci --production
          npm run build
          
          # Frontend
          cd ../frontend
          npm ci --production
          npm run build
          
          # Aplicar migrations
          cd ../backend
          npm run migrate
          
          # Reiniciar PM2
          pm2 reload ecosystem.config.js
        env:
          NODE_ENV: production
          # Aqui vocÃª adicionaria outras variÃ¡veis de ambiente necessÃ¡rias
          # Recomenda-se usar GitHub Secrets para variÃ¡veis sensÃ­veis
