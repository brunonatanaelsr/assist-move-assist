version: "3.9"

services:
  db:
    image: postgres:16
    container_name: assist_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-assist_db}
      POSTGRES_USER: ${DB_USER:-assist_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Z8k3qU6q4x9KxQvW}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env

  redis:
    image: redis:7
    container_name: assist_redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD:-QnB4h6qT2gKp9w3E7fJ2v4yR}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - ./backend/.env

  backend:
    build:
      context: ./backend
    container_name: assist_backend
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    ports:
      - "4000:4000"
    restart: unless-stopped

  frontend:
    build:
      context: .
    container_name: assist_frontend
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://localhost:4000}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:4000}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:4000}
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:4000}
      NODE_ENV: ${NODE_ENV:-development}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  db_data:
  redis_data:
